openapi: 3.0.0
info:
  title: ImageCraft API
  description: API for image processing and storage
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Development server
paths:
  /auth/login:
    post:
      summary: User login
      description: Authenticate a user and return a JWT token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apiKey:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /auth/renew-token:
    post:
      summary: Renew JWT token
      description: Renew an existing JWT token
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token renewed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized

  /images/upload:
    post:
      summary: Upload images
      description: Upload one or more images
      tags:
        - Images
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Images uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        url:
                          type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /images/{key}:
    get:
      summary: Get image
      description: Retrieve a specific image
      tags:
        - Images
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
        - in: query
          name: width
          schema:
            type: integer
        - in: query
          name: height
          schema:
            type: integer
        - in: query
          name: fit
          schema:
            type: string
            enum: [cover, contain, fill, inside, outside]
        - in: query
          name: quality
          schema:
            type: integer
      responses:
        '200':
          description: Image retrieved successfully
          content:
            image/webp:
              schema:
                type: string
                format: binary
        '404':
          description: Image not found

    delete:
      summary: Delete image
      description: Delete a specific image
      tags:
        - Images
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Image deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Image not found

  /images:
    get:
      summary: List images
      description: List all images or images for a specific user
      tags:
        - Images
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Images listed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        uri:
                          type: string
                        lastModified:
                          type: string
                          format: date-time
                        size:
                          type: string
                        originalMimetype:
                          type: string
                        originalSize:
                          type: string
                  nextCursor:
                    type: string
                  total:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  /health:
    get:
      summary: Health check
      description: Check the server status
      tags:
        - System
      responses:
        '200':
          description: Server is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

